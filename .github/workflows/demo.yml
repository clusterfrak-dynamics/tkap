name: 'terraform:env:demo'

on:
  push:
    branches:
    - master
    paths:
    - 'terraform/live/demo/**'
  pull_request:

jobs:
  terraform:
    name: 'terraform:env:demo'
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: 'asdf:install'
      uses: asdf-vm/actions/install@v1.0.0

    - name: 'terraform:setup'
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_wrapper: true
        terraform_version: 0.13.2

    - name: 'terraform:fmt:kapsule'
      run: terraform fmt -check
      working-directory: terraform/live/demo/fr-par/kapsule
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}

    - name: 'terraform:init:kapsule'
      run: terraform init
      working-directory: terraform/live/demo/fr-par/kapsule
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}

    - name: 'terraform:plan:kapsule'
      run: terraform plan
      working-directory: terraform/live/demo/fr-par/kapsule
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}

    - name: 'terraform:apply:kapsule'
      run: terraform apply -auto-approve
      working-directory: terraform/live/demo/fr-par/kapsule
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}

    - name: 'terraform:destroy:kapsule'
      run: terraform destroy -auto-approve
      working-directory: terraform/live/demo/fr-par/kapsule
      if: "!contains(github.event.head_commit.message, 'ci keep')"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
